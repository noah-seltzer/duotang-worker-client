/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './react-app/routes/__root'
import { Route as ColorRouteImport } from './react-app/routes/color'
import { Route as IndexRouteImport } from './react-app/routes/index'
import { Route as ConfigureIndexRouteImport } from './react-app/routes/configure/index'
import { Route as ListManagerRouteImport } from './react-app/routes/list/manager'
import { Route as ListBuilderRouteImport } from './react-app/routes/list/builder'

const ColorRoute = ColorRouteImport.update({
  id: '/color',
  path: '/color',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ConfigureIndexRoute = ConfigureIndexRouteImport.update({
  id: '/configure/',
  path: '/configure/',
  getParentRoute: () => rootRouteImport,
} as any)
const ListManagerRoute = ListManagerRouteImport.update({
  id: '/list/manager',
  path: '/list/manager',
  getParentRoute: () => rootRouteImport,
} as any)
const ListBuilderRoute = ListBuilderRouteImport.update({
  id: '/list/builder',
  path: '/list/builder',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/color': typeof ColorRoute
  '/list/builder': typeof ListBuilderRoute
  '/list/manager': typeof ListManagerRoute
  '/configure': typeof ConfigureIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/color': typeof ColorRoute
  '/list/builder': typeof ListBuilderRoute
  '/list/manager': typeof ListManagerRoute
  '/configure': typeof ConfigureIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/color': typeof ColorRoute
  '/list/builder': typeof ListBuilderRoute
  '/list/manager': typeof ListManagerRoute
  '/configure/': typeof ConfigureIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/color' | '/list/builder' | '/list/manager' | '/configure'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/color' | '/list/builder' | '/list/manager' | '/configure'
  id:
    | '__root__'
    | '/'
    | '/color'
    | '/list/builder'
    | '/list/manager'
    | '/configure/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ColorRoute: typeof ColorRoute
  ListBuilderRoute: typeof ListBuilderRoute
  ListManagerRoute: typeof ListManagerRoute
  ConfigureIndexRoute: typeof ConfigureIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/color': {
      id: '/color'
      path: '/color'
      fullPath: '/color'
      preLoaderRoute: typeof ColorRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/configure/': {
      id: '/configure/'
      path: '/configure'
      fullPath: '/configure'
      preLoaderRoute: typeof ConfigureIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/list/manager': {
      id: '/list/manager'
      path: '/list/manager'
      fullPath: '/list/manager'
      preLoaderRoute: typeof ListManagerRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/list/builder': {
      id: '/list/builder'
      path: '/list/builder'
      fullPath: '/list/builder'
      preLoaderRoute: typeof ListBuilderRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ColorRoute: ColorRoute,
  ListBuilderRoute: ListBuilderRoute,
  ListManagerRoute: ListManagerRoute,
  ConfigureIndexRoute: ConfigureIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
